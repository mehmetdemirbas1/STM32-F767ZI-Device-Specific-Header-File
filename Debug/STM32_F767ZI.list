
STM32_F767ZI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000564  080001f8  080001f8  000011f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800075c  08000764  00001764  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800075c  0800075c  00001764  2**0
                  CONTENTS
  4 .ARM          00000000  0800075c  0800075c  00001764  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800075c  08000764  00001764  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800075c  0800075c  0000175c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000760  08000760  00001760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001764  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000764  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000764  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00001764  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000c8d  00000000  00000000  0000178e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003ef  00000000  00000000  0000241b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000d0  00000000  00000000  00002810  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000008b  00000000  00000000  000028e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002572  00000000  00000000  0000296b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014e2  00000000  00000000  00004edd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000b12f  00000000  00000000  000063bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000114ee  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000023c  00000000  00000000  00011534  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000043  00000000  00000000  00011770  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	@ (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	@ (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	@ (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	08000744 	.word	0x08000744

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	@ (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	@ (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	@ (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	08000744 	.word	0x08000744

08000238 <EXTI_Init>:
 * @oaram	EXTI_InitStruct = User config structure
 *
 * @retreval None
 */
void EXTI_Init(EXTI_InitTypeDef_t *EXTI_InitStruct)
{
 8000238:	b480      	push	{r7}
 800023a:	b085      	sub	sp, #20
 800023c:	af00      	add	r7, sp, #0
 800023e:	6078      	str	r0, [r7, #4]
	uint32_t tempValue = 0;
 8000240:	2300      	movs	r3, #0
 8000242:	60fb      	str	r3, [r7, #12]
	tempValue = (uint32_t)EXTI_BASE_ADDR;
 8000244:	4b43      	ldr	r3, [pc, #268]	@ (8000354 <EXTI_Init+0x11c>)
 8000246:	60fb      	str	r3, [r7, #12]

	EXTI->IMR &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);
 8000248:	4b42      	ldr	r3, [pc, #264]	@ (8000354 <EXTI_Init+0x11c>)
 800024a:	681a      	ldr	r2, [r3, #0]
 800024c:	687b      	ldr	r3, [r7, #4]
 800024e:	781b      	ldrb	r3, [r3, #0]
 8000250:	4619      	mov	r1, r3
 8000252:	2301      	movs	r3, #1
 8000254:	408b      	lsls	r3, r1
 8000256:	43db      	mvns	r3, r3
 8000258:	493e      	ldr	r1, [pc, #248]	@ (8000354 <EXTI_Init+0x11c>)
 800025a:	4013      	ands	r3, r2
 800025c:	600b      	str	r3, [r1, #0]
	EXTI->EMR &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);
 800025e:	4b3d      	ldr	r3, [pc, #244]	@ (8000354 <EXTI_Init+0x11c>)
 8000260:	685a      	ldr	r2, [r3, #4]
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	781b      	ldrb	r3, [r3, #0]
 8000266:	4619      	mov	r1, r3
 8000268:	2301      	movs	r3, #1
 800026a:	408b      	lsls	r3, r1
 800026c:	43db      	mvns	r3, r3
 800026e:	4939      	ldr	r1, [pc, #228]	@ (8000354 <EXTI_Init+0x11c>)
 8000270:	4013      	ands	r3, r2
 8000272:	604b      	str	r3, [r1, #4]

	if(EXTI_InitStruct->EXTI_LineCmd !=DISABLE)
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	78db      	ldrb	r3, [r3, #3]
 8000278:	2b00      	cmp	r3, #0
 800027a:	d053      	beq.n	8000324 <EXTI_Init+0xec>
	{
		tempValue += EXTI_InitStruct->Mode;
 800027c:	687b      	ldr	r3, [r7, #4]
 800027e:	789b      	ldrb	r3, [r3, #2]
 8000280:	461a      	mov	r2, r3
 8000282:	68fb      	ldr	r3, [r7, #12]
 8000284:	4413      	add	r3, r2
 8000286:	60fb      	str	r3, [r7, #12]
		*((volatile uint32_t*)tempValue) |= (0x1U << EXTI_InitStruct->EXTI_LineNumber);
 8000288:	68fb      	ldr	r3, [r7, #12]
 800028a:	6819      	ldr	r1, [r3, #0]
 800028c:	687b      	ldr	r3, [r7, #4]
 800028e:	781b      	ldrb	r3, [r3, #0]
 8000290:	461a      	mov	r2, r3
 8000292:	2301      	movs	r3, #1
 8000294:	fa03 f202 	lsl.w	r2, r3, r2
 8000298:	68fb      	ldr	r3, [r7, #12]
 800029a:	430a      	orrs	r2, r1
 800029c:	601a      	str	r2, [r3, #0]

		tempValue = (uint32_t)EXTI_BASE_ADDR;
 800029e:	4b2d      	ldr	r3, [pc, #180]	@ (8000354 <EXTI_Init+0x11c>)
 80002a0:	60fb      	str	r3, [r7, #12]

		EXTI->RTSR &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);
 80002a2:	4b2c      	ldr	r3, [pc, #176]	@ (8000354 <EXTI_Init+0x11c>)
 80002a4:	689a      	ldr	r2, [r3, #8]
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	781b      	ldrb	r3, [r3, #0]
 80002aa:	4619      	mov	r1, r3
 80002ac:	2301      	movs	r3, #1
 80002ae:	408b      	lsls	r3, r1
 80002b0:	43db      	mvns	r3, r3
 80002b2:	4928      	ldr	r1, [pc, #160]	@ (8000354 <EXTI_Init+0x11c>)
 80002b4:	4013      	ands	r3, r2
 80002b6:	608b      	str	r3, [r1, #8]
		EXTI->FTSR &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);
 80002b8:	4b26      	ldr	r3, [pc, #152]	@ (8000354 <EXTI_Init+0x11c>)
 80002ba:	68da      	ldr	r2, [r3, #12]
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	781b      	ldrb	r3, [r3, #0]
 80002c0:	4619      	mov	r1, r3
 80002c2:	2301      	movs	r3, #1
 80002c4:	408b      	lsls	r3, r1
 80002c6:	43db      	mvns	r3, r3
 80002c8:	4922      	ldr	r1, [pc, #136]	@ (8000354 <EXTI_Init+0x11c>)
 80002ca:	4013      	ands	r3, r2
 80002cc:	60cb      	str	r3, [r1, #12]

		if(EXTI_InitStruct->TriggerSelection == EXTI_TRIGGER_RF_EDGE)
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	785b      	ldrb	r3, [r3, #1]
 80002d2:	2b10      	cmp	r3, #16
 80002d4:	d114      	bne.n	8000300 <EXTI_Init+0xc8>
		{
			EXTI->RTSR |= (0x1U << EXTI_InitStruct->EXTI_LineNumber);
 80002d6:	4b1f      	ldr	r3, [pc, #124]	@ (8000354 <EXTI_Init+0x11c>)
 80002d8:	689a      	ldr	r2, [r3, #8]
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	781b      	ldrb	r3, [r3, #0]
 80002de:	4619      	mov	r1, r3
 80002e0:	2301      	movs	r3, #1
 80002e2:	408b      	lsls	r3, r1
 80002e4:	491b      	ldr	r1, [pc, #108]	@ (8000354 <EXTI_Init+0x11c>)
 80002e6:	4313      	orrs	r3, r2
 80002e8:	608b      	str	r3, [r1, #8]
			EXTI->FTSR |= (0x1U << EXTI_InitStruct->EXTI_LineNumber);
 80002ea:	4b1a      	ldr	r3, [pc, #104]	@ (8000354 <EXTI_Init+0x11c>)
 80002ec:	68da      	ldr	r2, [r3, #12]
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	781b      	ldrb	r3, [r3, #0]
 80002f2:	4619      	mov	r1, r3
 80002f4:	2301      	movs	r3, #1
 80002f6:	408b      	lsls	r3, r1
 80002f8:	4916      	ldr	r1, [pc, #88]	@ (8000354 <EXTI_Init+0x11c>)
 80002fa:	4313      	orrs	r3, r2
 80002fc:	60cb      	str	r3, [r1, #12]
		*((volatile uint32_t*)tempValue) &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);

	}


}
 80002fe:	e024      	b.n	800034a <EXTI_Init+0x112>
			tempValue += EXTI_InitStruct->TriggerSelection;
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	785b      	ldrb	r3, [r3, #1]
 8000304:	461a      	mov	r2, r3
 8000306:	68fb      	ldr	r3, [r7, #12]
 8000308:	4413      	add	r3, r2
 800030a:	60fb      	str	r3, [r7, #12]
			*((volatile uint32_t*)tempValue) |= (0x1U << EXTI_InitStruct->EXTI_LineNumber);
 800030c:	68fb      	ldr	r3, [r7, #12]
 800030e:	6819      	ldr	r1, [r3, #0]
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	781b      	ldrb	r3, [r3, #0]
 8000314:	461a      	mov	r2, r3
 8000316:	2301      	movs	r3, #1
 8000318:	fa03 f202 	lsl.w	r2, r3, r2
 800031c:	68fb      	ldr	r3, [r7, #12]
 800031e:	430a      	orrs	r2, r1
 8000320:	601a      	str	r2, [r3, #0]
}
 8000322:	e012      	b.n	800034a <EXTI_Init+0x112>
		tempValue = (uint32_t)EXTI_BASE_ADDR;
 8000324:	4b0b      	ldr	r3, [pc, #44]	@ (8000354 <EXTI_Init+0x11c>)
 8000326:	60fb      	str	r3, [r7, #12]
		tempValue += EXTI_InitStruct->Mode;
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	789b      	ldrb	r3, [r3, #2]
 800032c:	461a      	mov	r2, r3
 800032e:	68fb      	ldr	r3, [r7, #12]
 8000330:	4413      	add	r3, r2
 8000332:	60fb      	str	r3, [r7, #12]
		*((volatile uint32_t*)tempValue) &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);
 8000334:	68fb      	ldr	r3, [r7, #12]
 8000336:	6819      	ldr	r1, [r3, #0]
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	781b      	ldrb	r3, [r3, #0]
 800033c:	461a      	mov	r2, r3
 800033e:	2301      	movs	r3, #1
 8000340:	4093      	lsls	r3, r2
 8000342:	43da      	mvns	r2, r3
 8000344:	68fb      	ldr	r3, [r7, #12]
 8000346:	400a      	ands	r2, r1
 8000348:	601a      	str	r2, [r3, #0]
}
 800034a:	bf00      	nop
 800034c:	3714      	adds	r7, #20
 800034e:	46bd      	mov	sp, r7
 8000350:	bc80      	pop	{r7}
 8000352:	4770      	bx	lr
 8000354:	40013c00 	.word	0x40013c00

08000358 <EXTI_LineConfig>:
 * @param	EXTI_LineSource = user choose our EXTI Line Sources @def_group Line_Values
 *
 * @retreval None
 */
void EXTI_LineConfig(uint8_t EXTI_PortSource, uint8_t EXTI_LineSource)
{
 8000358:	b480      	push	{r7}
 800035a:	b085      	sub	sp, #20
 800035c:	af00      	add	r7, sp, #0
 800035e:	4603      	mov	r3, r0
 8000360:	460a      	mov	r2, r1
 8000362:	71fb      	strb	r3, [r7, #7]
 8000364:	4613      	mov	r3, r2
 8000366:	71bb      	strb	r3, [r7, #6]
	uint32_t tempValue = 0;
 8000368:	2300      	movs	r3, #0
 800036a:	60fb      	str	r3, [r7, #12]
    tempValue = SYSCFG->EXTI_CR[EXTI_LineSource >> 2U];
 800036c:	4a14      	ldr	r2, [pc, #80]	@ (80003c0 <EXTI_LineConfig+0x68>)
 800036e:	79bb      	ldrb	r3, [r7, #6]
 8000370:	089b      	lsrs	r3, r3, #2
 8000372:	b2db      	uxtb	r3, r3
 8000374:	3302      	adds	r3, #2
 8000376:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800037a:	60fb      	str	r3, [r7, #12]
    tempValue &= ~(0xF << (EXTI_LineSource & 0x3U)*4);
 800037c:	79bb      	ldrb	r3, [r7, #6]
 800037e:	f003 0303 	and.w	r3, r3, #3
 8000382:	009b      	lsls	r3, r3, #2
 8000384:	220f      	movs	r2, #15
 8000386:	fa02 f303 	lsl.w	r3, r2, r3
 800038a:	43db      	mvns	r3, r3
 800038c:	461a      	mov	r2, r3
 800038e:	68fb      	ldr	r3, [r7, #12]
 8000390:	4013      	ands	r3, r2
 8000392:	60fb      	str	r3, [r7, #12]
    tempValue = (EXTI_PortSource <<(EXTI_LineSource & 0x3U)*4 );
 8000394:	79fa      	ldrb	r2, [r7, #7]
 8000396:	79bb      	ldrb	r3, [r7, #6]
 8000398:	f003 0303 	and.w	r3, r3, #3
 800039c:	009b      	lsls	r3, r3, #2
 800039e:	fa02 f303 	lsl.w	r3, r2, r3
 80003a2:	60fb      	str	r3, [r7, #12]
    SYSCFG->EXTI_CR[EXTI_LineSource >> 2U] = tempValue;
 80003a4:	4906      	ldr	r1, [pc, #24]	@ (80003c0 <EXTI_LineConfig+0x68>)
 80003a6:	79bb      	ldrb	r3, [r7, #6]
 80003a8:	089b      	lsrs	r3, r3, #2
 80003aa:	b2db      	uxtb	r3, r3
 80003ac:	3302      	adds	r3, #2
 80003ae:	68fa      	ldr	r2, [r7, #12]
 80003b0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

}
 80003b4:	bf00      	nop
 80003b6:	3714      	adds	r7, #20
 80003b8:	46bd      	mov	sp, r7
 80003ba:	bc80      	pop	{r7}
 80003bc:	4770      	bx	lr
 80003be:	bf00      	nop
 80003c0:	40013800 	.word	0x40013800

080003c4 <NVIC_EnableInterrupt>:
 * @oaram	IRQNumber = IRQ number of line
 *
 * @retreval None
 */
void NVIC_EnableInterrupt(IRQNumber_TypeDef_t IRQNumber)
{
 80003c4:	b480      	push	{r7}
 80003c6:	b085      	sub	sp, #20
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	4603      	mov	r3, r0
 80003cc:	71fb      	strb	r3, [r7, #7]
	uint32_t tempValue = 0;
 80003ce:	2300      	movs	r3, #0
 80003d0:	60fb      	str	r3, [r7, #12]

	tempValue = *((IRQNumber >>5U)+ NVIC_ISER0 );
 80003d2:	79fb      	ldrb	r3, [r7, #7]
 80003d4:	095b      	lsrs	r3, r3, #5
 80003d6:	b2db      	uxtb	r3, r3
 80003d8:	009a      	lsls	r2, r3, #2
 80003da:	4b12      	ldr	r3, [pc, #72]	@ (8000424 <NVIC_EnableInterrupt+0x60>)
 80003dc:	4413      	add	r3, r2
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	60fb      	str	r3, [r7, #12]
	tempValue &= ~(0x1U << (IRQNumber & 0x1FU));
 80003e2:	79fb      	ldrb	r3, [r7, #7]
 80003e4:	f003 031f 	and.w	r3, r3, #31
 80003e8:	2201      	movs	r2, #1
 80003ea:	fa02 f303 	lsl.w	r3, r2, r3
 80003ee:	43db      	mvns	r3, r3
 80003f0:	68fa      	ldr	r2, [r7, #12]
 80003f2:	4013      	ands	r3, r2
 80003f4:	60fb      	str	r3, [r7, #12]
	tempValue |= (0x1U << (IRQNumber & 0x1FU));
 80003f6:	79fb      	ldrb	r3, [r7, #7]
 80003f8:	f003 031f 	and.w	r3, r3, #31
 80003fc:	2201      	movs	r2, #1
 80003fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000402:	68fa      	ldr	r2, [r7, #12]
 8000404:	4313      	orrs	r3, r2
 8000406:	60fb      	str	r3, [r7, #12]
	*((IRQNumber >>5U)+ NVIC_ISER0 ) = tempValue;
 8000408:	79fb      	ldrb	r3, [r7, #7]
 800040a:	095b      	lsrs	r3, r3, #5
 800040c:	b2db      	uxtb	r3, r3
 800040e:	009a      	lsls	r2, r3, #2
 8000410:	4b04      	ldr	r3, [pc, #16]	@ (8000424 <NVIC_EnableInterrupt+0x60>)
 8000412:	4413      	add	r3, r2
 8000414:	68fa      	ldr	r2, [r7, #12]
 8000416:	601a      	str	r2, [r3, #0]
}
 8000418:	bf00      	nop
 800041a:	3714      	adds	r7, #20
 800041c:	46bd      	mov	sp, r7
 800041e:	bc80      	pop	{r7}
 8000420:	4770      	bx	lr
 8000422:	bf00      	nop
 8000424:	e000e100 	.word	0xe000e100

08000428 <GPIO_Init>:
 *
 * @retreval None
 */

void GPIO_Init(GPIO_TypeDef_t *GPIOx, GPIO_InitTypeDef_t *GPIO_ConfigStruct)
{
 8000428:	b480      	push	{r7}
 800042a:	b087      	sub	sp, #28
 800042c:	af00      	add	r7, sp, #0
 800042e:	6078      	str	r0, [r7, #4]
 8000430:	6039      	str	r1, [r7, #0]
	uint32_t position;
	uint32_t fakePosition = 0;
 8000432:	2300      	movs	r3, #0
 8000434:	613b      	str	r3, [r7, #16]
	uint32_t lastPosition = 0;
 8000436:	2300      	movs	r3, #0
 8000438:	60fb      	str	r3, [r7, #12]
	for(position = 0; position <16; position++)
 800043a:	2300      	movs	r3, #0
 800043c:	617b      	str	r3, [r7, #20]
 800043e:	e078      	b.n	8000532 <GPIO_Init+0x10a>
	{
		fakePosition = (0x1 << position);
 8000440:	2201      	movs	r2, #1
 8000442:	697b      	ldr	r3, [r7, #20]
 8000444:	fa02 f303 	lsl.w	r3, r2, r3
 8000448:	613b      	str	r3, [r7, #16]
		lastPosition = (uint32_t)(GPIO_ConfigStruct->PinNumbers)&fakePosition;
 800044a:	683b      	ldr	r3, [r7, #0]
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	693a      	ldr	r2, [r7, #16]
 8000450:	4013      	ands	r3, r2
 8000452:	60fb      	str	r3, [r7, #12]
		if(fakePosition == lastPosition)
 8000454:	693a      	ldr	r2, [r7, #16]
 8000456:	68fb      	ldr	r3, [r7, #12]
 8000458:	429a      	cmp	r2, r3
 800045a:	d167      	bne.n	800052c <GPIO_Init+0x104>
		{
			/* MODE CONFIG */
			uint32_t tempValue=0;
 800045c:	2300      	movs	r3, #0
 800045e:	60bb      	str	r3, [r7, #8]
			tempValue = GPIOx->MODER;
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	60bb      	str	r3, [r7, #8]
			tempValue &= ~(0x3U << (position*2));
 8000466:	697b      	ldr	r3, [r7, #20]
 8000468:	005b      	lsls	r3, r3, #1
 800046a:	2203      	movs	r2, #3
 800046c:	fa02 f303 	lsl.w	r3, r2, r3
 8000470:	43db      	mvns	r3, r3
 8000472:	68ba      	ldr	r2, [r7, #8]
 8000474:	4013      	ands	r3, r2
 8000476:	60bb      	str	r3, [r7, #8]
			tempValue |= (GPIO_ConfigStruct->Mode <<(position*2));
 8000478:	683b      	ldr	r3, [r7, #0]
 800047a:	685a      	ldr	r2, [r3, #4]
 800047c:	697b      	ldr	r3, [r7, #20]
 800047e:	005b      	lsls	r3, r3, #1
 8000480:	fa02 f303 	lsl.w	r3, r2, r3
 8000484:	68ba      	ldr	r2, [r7, #8]
 8000486:	4313      	orrs	r3, r2
 8000488:	60bb      	str	r3, [r7, #8]
			GPIOx->MODER = tempValue;
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	68ba      	ldr	r2, [r7, #8]
 800048e:	601a      	str	r2, [r3, #0]
			if(GPIO_ConfigStruct->Mode == GPIO_MODE_OUTPUT || GPIO_ConfigStruct->Mode == GPIO_MODE_AF)
 8000490:	683b      	ldr	r3, [r7, #0]
 8000492:	685b      	ldr	r3, [r3, #4]
 8000494:	2b01      	cmp	r3, #1
 8000496:	d003      	beq.n	80004a0 <GPIO_Init+0x78>
 8000498:	683b      	ldr	r3, [r7, #0]
 800049a:	685b      	ldr	r3, [r3, #4]
 800049c:	2b02      	cmp	r3, #2
 800049e:	d12d      	bne.n	80004fc <GPIO_Init+0xd4>
			{
				/* OTYPE CONFIG */
				tempValue =GPIOx->OTYPER;
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	685b      	ldr	r3, [r3, #4]
 80004a4:	60bb      	str	r3, [r7, #8]
				tempValue &= ~(0x1U << position);
 80004a6:	2201      	movs	r2, #1
 80004a8:	697b      	ldr	r3, [r7, #20]
 80004aa:	fa02 f303 	lsl.w	r3, r2, r3
 80004ae:	43db      	mvns	r3, r3
 80004b0:	68ba      	ldr	r2, [r7, #8]
 80004b2:	4013      	ands	r3, r2
 80004b4:	60bb      	str	r3, [r7, #8]
				tempValue |= (GPIO_ConfigStruct->Otype <<(position));
 80004b6:	683b      	ldr	r3, [r7, #0]
 80004b8:	689a      	ldr	r2, [r3, #8]
 80004ba:	697b      	ldr	r3, [r7, #20]
 80004bc:	fa02 f303 	lsl.w	r3, r2, r3
 80004c0:	68ba      	ldr	r2, [r7, #8]
 80004c2:	4313      	orrs	r3, r2
 80004c4:	60bb      	str	r3, [r7, #8]
				GPIOx->OTYPER = tempValue;
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	68ba      	ldr	r2, [r7, #8]
 80004ca:	605a      	str	r2, [r3, #4]

				/* OSPEED CONFIG */
				tempValue = GPIOx->OSPEEDR;
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	689b      	ldr	r3, [r3, #8]
 80004d0:	60bb      	str	r3, [r7, #8]
				tempValue &= ~(0x3U << (position*2));
 80004d2:	697b      	ldr	r3, [r7, #20]
 80004d4:	005b      	lsls	r3, r3, #1
 80004d6:	2203      	movs	r2, #3
 80004d8:	fa02 f303 	lsl.w	r3, r2, r3
 80004dc:	43db      	mvns	r3, r3
 80004de:	68ba      	ldr	r2, [r7, #8]
 80004e0:	4013      	ands	r3, r2
 80004e2:	60bb      	str	r3, [r7, #8]
				tempValue |= (GPIO_ConfigStruct->Speed <<(position*2));
 80004e4:	683b      	ldr	r3, [r7, #0]
 80004e6:	691a      	ldr	r2, [r3, #16]
 80004e8:	697b      	ldr	r3, [r7, #20]
 80004ea:	005b      	lsls	r3, r3, #1
 80004ec:	fa02 f303 	lsl.w	r3, r2, r3
 80004f0:	68ba      	ldr	r2, [r7, #8]
 80004f2:	4313      	orrs	r3, r2
 80004f4:	60bb      	str	r3, [r7, #8]
				GPIOx->OSPEEDR = tempValue;
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	68ba      	ldr	r2, [r7, #8]
 80004fa:	609a      	str	r2, [r3, #8]
			}
			/* PUPDR CONFIG */
			tempValue = GPIOx->PUPDR;
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	68db      	ldr	r3, [r3, #12]
 8000500:	60bb      	str	r3, [r7, #8]
			tempValue &= ~(0x3U << (position*2));
 8000502:	697b      	ldr	r3, [r7, #20]
 8000504:	005b      	lsls	r3, r3, #1
 8000506:	2203      	movs	r2, #3
 8000508:	fa02 f303 	lsl.w	r3, r2, r3
 800050c:	43db      	mvns	r3, r3
 800050e:	68ba      	ldr	r2, [r7, #8]
 8000510:	4013      	ands	r3, r2
 8000512:	60bb      	str	r3, [r7, #8]
			tempValue |= (GPIO_ConfigStruct->PuPd <<(position*2));
 8000514:	683b      	ldr	r3, [r7, #0]
 8000516:	68da      	ldr	r2, [r3, #12]
 8000518:	697b      	ldr	r3, [r7, #20]
 800051a:	005b      	lsls	r3, r3, #1
 800051c:	fa02 f303 	lsl.w	r3, r2, r3
 8000520:	68ba      	ldr	r2, [r7, #8]
 8000522:	4313      	orrs	r3, r2
 8000524:	60bb      	str	r3, [r7, #8]
			GPIOx->PUPDR = tempValue;
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	68ba      	ldr	r2, [r7, #8]
 800052a:	60da      	str	r2, [r3, #12]
	for(position = 0; position <16; position++)
 800052c:	697b      	ldr	r3, [r7, #20]
 800052e:	3301      	adds	r3, #1
 8000530:	617b      	str	r3, [r7, #20]
 8000532:	697b      	ldr	r3, [r7, #20]
 8000534:	2b0f      	cmp	r3, #15
 8000536:	d983      	bls.n	8000440 <GPIO_Init+0x18>

		}
	}
}
 8000538:	bf00      	nop
 800053a:	bf00      	nop
 800053c:	371c      	adds	r7, #28
 800053e:	46bd      	mov	sp, r7
 8000540:	bc80      	pop	{r7}
 8000542:	4770      	bx	lr

08000544 <GPIO_WritePin>:
 *
 *  @param  PinState = GPIO_Pin_Set or GPIO_Pin_Reset
 * @retreval None
 */
void GPIO_WritePin(GPIO_TypeDef_t *GPIOx, uint16_t Pin_Number, GPIO_PinState_t PinState)
{
 8000544:	b480      	push	{r7}
 8000546:	b083      	sub	sp, #12
 8000548:	af00      	add	r7, sp, #0
 800054a:	6078      	str	r0, [r7, #4]
 800054c:	460b      	mov	r3, r1
 800054e:	807b      	strh	r3, [r7, #2]
 8000550:	4613      	mov	r3, r2
 8000552:	707b      	strb	r3, [r7, #1]
	if(PinState == GPIO_Pin_Set)
 8000554:	787b      	ldrb	r3, [r7, #1]
 8000556:	2b01      	cmp	r3, #1
 8000558:	d103      	bne.n	8000562 <GPIO_WritePin+0x1e>
	{
		GPIOx->BSSR = Pin_Number;
 800055a:	887a      	ldrh	r2, [r7, #2]
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	619a      	str	r2, [r3, #24]
	}
	else
	{
		GPIOx->BSSR = (Pin_Number << 16U);
	}
}
 8000560:	e003      	b.n	800056a <GPIO_WritePin+0x26>
		GPIOx->BSSR = (Pin_Number << 16U);
 8000562:	887b      	ldrh	r3, [r7, #2]
 8000564:	041a      	lsls	r2, r3, #16
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	619a      	str	r2, [r3, #24]
}
 800056a:	bf00      	nop
 800056c:	370c      	adds	r7, #12
 800056e:	46bd      	mov	sp, r7
 8000570:	bc80      	pop	{r7}
 8000572:	4770      	bx	lr

08000574 <EXTI0_IRQHandler>:
static void GPIO_LedConfig();
static void GPIO_LockControl();
static void GPIO_ButtonInterruptConfig();

void EXTI0_IRQHandler()
{
 8000574:	b580      	push	{r7, lr}
 8000576:	af00      	add	r7, sp, #0
	if(EXTI->PR & 0x1)
 8000578:	4b09      	ldr	r3, [pc, #36]	@ (80005a0 <EXTI0_IRQHandler+0x2c>)
 800057a:	695b      	ldr	r3, [r3, #20]
 800057c:	f003 0301 	and.w	r3, r3, #1
 8000580:	2b00      	cmp	r3, #0
 8000582:	d00b      	beq.n	800059c <EXTI0_IRQHandler+0x28>
	{
		EXTI->PR |= (0x1U << 0U);
 8000584:	4b06      	ldr	r3, [pc, #24]	@ (80005a0 <EXTI0_IRQHandler+0x2c>)
 8000586:	695b      	ldr	r3, [r3, #20]
 8000588:	4a05      	ldr	r2, [pc, #20]	@ (80005a0 <EXTI0_IRQHandler+0x2c>)
 800058a:	f043 0301 	orr.w	r3, r3, #1
 800058e:	6153      	str	r3, [r2, #20]
		GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_7|GPIO_PIN_14, GPIO_Pin_Set);
 8000590:	2201      	movs	r2, #1
 8000592:	f244 0181 	movw	r1, #16513	@ 0x4081
 8000596:	4803      	ldr	r0, [pc, #12]	@ (80005a4 <EXTI0_IRQHandler+0x30>)
 8000598:	f7ff ffd4 	bl	8000544 <GPIO_WritePin>
	}
}
 800059c:	bf00      	nop
 800059e:	bd80      	pop	{r7, pc}
 80005a0:	40013c00 	.word	0x40013c00
 80005a4:	40020400 	.word	0x40020400

080005a8 <main>:

int main(void)
{
 80005a8:	b580      	push	{r7, lr}
 80005aa:	af00      	add	r7, sp, #0
	GPIO_LedConfig();
 80005ac:	f000 f804 	bl	80005b8 <GPIO_LedConfig>
	//GPIO_LockPin(GPIOC, GPIO_PIN_13);
	//GPIO_LockControl();
	GPIO_ButtonInterruptConfig();
 80005b0:	f000 f846 	bl	8000640 <GPIO_ButtonInterruptConfig>


	for(;;)
 80005b4:	bf00      	nop
 80005b6:	e7fd      	b.n	80005b4 <main+0xc>

080005b8 <GPIO_LedConfig>:

	}
}

static void GPIO_LedConfig()
{
 80005b8:	b580      	push	{r7, lr}
 80005ba:	b088      	sub	sp, #32
 80005bc:	af00      	add	r7, sp, #0
	RCC_GPIOB_CLK_ENABLE();
 80005be:	2300      	movs	r3, #0
 80005c0:	61fb      	str	r3, [r7, #28]
 80005c2:	4b1d      	ldr	r3, [pc, #116]	@ (8000638 <GPIO_LedConfig+0x80>)
 80005c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005c6:	4a1c      	ldr	r2, [pc, #112]	@ (8000638 <GPIO_LedConfig+0x80>)
 80005c8:	f043 0302 	orr.w	r3, r3, #2
 80005cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80005ce:	4b1a      	ldr	r3, [pc, #104]	@ (8000638 <GPIO_LedConfig+0x80>)
 80005d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005d2:	f003 0302 	and.w	r3, r3, #2
 80005d6:	61fb      	str	r3, [r7, #28]
	RCC_GPIOC_CLK_ENABLE();
 80005d8:	2300      	movs	r3, #0
 80005da:	61bb      	str	r3, [r7, #24]
 80005dc:	4b16      	ldr	r3, [pc, #88]	@ (8000638 <GPIO_LedConfig+0x80>)
 80005de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005e0:	4a15      	ldr	r2, [pc, #84]	@ (8000638 <GPIO_LedConfig+0x80>)
 80005e2:	f043 0304 	orr.w	r3, r3, #4
 80005e6:	6313      	str	r3, [r2, #48]	@ 0x30
 80005e8:	4b13      	ldr	r3, [pc, #76]	@ (8000638 <GPIO_LedConfig+0x80>)
 80005ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005ec:	f003 0304 	and.w	r3, r3, #4
 80005f0:	61bb      	str	r3, [r7, #24]

	GPIO_InitTypeDef_t GPIO_LedStruct = {0};
 80005f2:	463b      	mov	r3, r7
 80005f4:	2200      	movs	r2, #0
 80005f6:	601a      	str	r2, [r3, #0]
 80005f8:	605a      	str	r2, [r3, #4]
 80005fa:	609a      	str	r2, [r3, #8]
 80005fc:	60da      	str	r2, [r3, #12]
 80005fe:	611a      	str	r2, [r3, #16]
 8000600:	615a      	str	r2, [r3, #20]
	GPIO_LedStruct.PinNumbers = GPIO_PIN_0|GPIO_PIN_7|GPIO_PIN_14;
 8000602:	f244 0381 	movw	r3, #16513	@ 0x4081
 8000606:	603b      	str	r3, [r7, #0]
	GPIO_LedStruct.Mode = GPIO_MODE_OUTPUT;
 8000608:	2301      	movs	r3, #1
 800060a:	607b      	str	r3, [r7, #4]
	GPIO_LedStruct.Speed = GPIO_SPEED_HIGH;
 800060c:	2302      	movs	r3, #2
 800060e:	613b      	str	r3, [r7, #16]
	GPIO_LedStruct.Otype = GPIO_OTYPE_PUSH_PULL;
 8000610:	2300      	movs	r3, #0
 8000612:	60bb      	str	r3, [r7, #8]
	GPIO_LedStruct.PuPd = GPIO_PUPD_NOPULL;
 8000614:	2300      	movs	r3, #0
 8000616:	60fb      	str	r3, [r7, #12]

	GPIO_Init(GPIOB, &GPIO_LedStruct);
 8000618:	463b      	mov	r3, r7
 800061a:	4619      	mov	r1, r3
 800061c:	4807      	ldr	r0, [pc, #28]	@ (800063c <GPIO_LedConfig+0x84>)
 800061e:	f7ff ff03 	bl	8000428 <GPIO_Init>
	memset(&GPIO_LedStruct,0,sizeof(GPIO_LedStruct));
 8000622:	463b      	mov	r3, r7
 8000624:	2218      	movs	r2, #24
 8000626:	2100      	movs	r1, #0
 8000628:	4618      	mov	r0, r3
 800062a:	f000 f85e 	bl	80006ea <memset>
	GPIO_LedStruct.Mode = GPIO_MODE_INPUT;
	GPIO_LedStruct.PuPd = GPIO_PUPD_PULL_DOWN;

	GPIO_Init(GPIOC, &GPIO_LedStruct);
*/
}
 800062e:	bf00      	nop
 8000630:	3720      	adds	r7, #32
 8000632:	46bd      	mov	sp, r7
 8000634:	bd80      	pop	{r7, pc}
 8000636:	bf00      	nop
 8000638:	40023800 	.word	0x40023800
 800063c:	40020400 	.word	0x40020400

08000640 <GPIO_ButtonInterruptConfig>:


}
*/
static void GPIO_ButtonInterruptConfig()
{
 8000640:	b580      	push	{r7, lr}
 8000642:	b082      	sub	sp, #8
 8000644:	af00      	add	r7, sp, #0
	EXTI_InitTypeDef_t EXTI_InitStruct = {0};
 8000646:	2300      	movs	r3, #0
 8000648:	603b      	str	r3, [r7, #0]
	RCC_SYSCFG_CLK_ENABLE();
 800064a:	2300      	movs	r3, #0
 800064c:	607b      	str	r3, [r7, #4]
 800064e:	4b11      	ldr	r3, [pc, #68]	@ (8000694 <GPIO_ButtonInterruptConfig+0x54>)
 8000650:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000652:	4a10      	ldr	r2, [pc, #64]	@ (8000694 <GPIO_ButtonInterruptConfig+0x54>)
 8000654:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000658:	6453      	str	r3, [r2, #68]	@ 0x44
 800065a:	4b0e      	ldr	r3, [pc, #56]	@ (8000694 <GPIO_ButtonInterruptConfig+0x54>)
 800065c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800065e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000662:	607b      	str	r3, [r7, #4]
	EXTI_LineConfig(EXTI_PortSource_GPIOC, EXTI_LineSource_0);
 8000664:	2100      	movs	r1, #0
 8000666:	2002      	movs	r0, #2
 8000668:	f7ff fe76 	bl	8000358 <EXTI_LineConfig>


	EXTI_InitStruct.EXTI_LineCmd = ENABLE;
 800066c:	2301      	movs	r3, #1
 800066e:	70fb      	strb	r3, [r7, #3]
	EXTI_InitStruct.Mode = EXTI_MODE_INTERRUPT;
 8000670:	2300      	movs	r3, #0
 8000672:	70bb      	strb	r3, [r7, #2]
	EXTI_InitStruct.TriggerSelection = EXTI_TRIGGER_RISING_EDGE;
 8000674:	2308      	movs	r3, #8
 8000676:	707b      	strb	r3, [r7, #1]
	EXTI_InitStruct.EXTI_LineNumber = EXTI_LineSource_0;
 8000678:	2300      	movs	r3, #0
 800067a:	703b      	strb	r3, [r7, #0]

	EXTI_Init(&EXTI_InitStruct);
 800067c:	463b      	mov	r3, r7
 800067e:	4618      	mov	r0, r3
 8000680:	f7ff fdda 	bl	8000238 <EXTI_Init>
	NVIC_EnableInterrupt(EXTI0_IRQNumber);
 8000684:	2006      	movs	r0, #6
 8000686:	f7ff fe9d 	bl	80003c4 <NVIC_EnableInterrupt>
}
 800068a:	bf00      	nop
 800068c:	3708      	adds	r7, #8
 800068e:	46bd      	mov	sp, r7
 8000690:	bd80      	pop	{r7, pc}
 8000692:	bf00      	nop
 8000694:	40023800 	.word	0x40023800

08000698 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000698:	480d      	ldr	r0, [pc, #52]	@ (80006d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800069a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800069c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006a0:	480c      	ldr	r0, [pc, #48]	@ (80006d4 <LoopForever+0x6>)
  ldr r1, =_edata
 80006a2:	490d      	ldr	r1, [pc, #52]	@ (80006d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80006a4:	4a0d      	ldr	r2, [pc, #52]	@ (80006dc <LoopForever+0xe>)
  movs r3, #0
 80006a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006a8:	e002      	b.n	80006b0 <LoopCopyDataInit>

080006aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006ae:	3304      	adds	r3, #4

080006b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006b4:	d3f9      	bcc.n	80006aa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006b6:	4a0a      	ldr	r2, [pc, #40]	@ (80006e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006b8:	4c0a      	ldr	r4, [pc, #40]	@ (80006e4 <LoopForever+0x16>)
  movs r3, #0
 80006ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006bc:	e001      	b.n	80006c2 <LoopFillZerobss>

080006be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006c0:	3204      	adds	r2, #4

080006c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006c4:	d3fb      	bcc.n	80006be <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80006c6:	f000 f819 	bl	80006fc <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 80006ca:	f7ff ff6d 	bl	80005a8 <main>

080006ce <LoopForever>:

LoopForever:
  b LoopForever
 80006ce:	e7fe      	b.n	80006ce <LoopForever>
  ldr   r0, =_estack
 80006d0:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 80006d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006d8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80006dc:	08000764 	.word	0x08000764
  ldr r2, =_sbss
 80006e0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80006e4:	2000001c 	.word	0x2000001c

080006e8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006e8:	e7fe      	b.n	80006e8 <ADC_IRQHandler>

080006ea <memset>:
 80006ea:	4402      	add	r2, r0
 80006ec:	4603      	mov	r3, r0
 80006ee:	4293      	cmp	r3, r2
 80006f0:	d100      	bne.n	80006f4 <memset+0xa>
 80006f2:	4770      	bx	lr
 80006f4:	f803 1b01 	strb.w	r1, [r3], #1
 80006f8:	e7f9      	b.n	80006ee <memset+0x4>
	...

080006fc <__libc_init_array>:
 80006fc:	b570      	push	{r4, r5, r6, lr}
 80006fe:	4d0d      	ldr	r5, [pc, #52]	@ (8000734 <__libc_init_array+0x38>)
 8000700:	4c0d      	ldr	r4, [pc, #52]	@ (8000738 <__libc_init_array+0x3c>)
 8000702:	1b64      	subs	r4, r4, r5
 8000704:	10a4      	asrs	r4, r4, #2
 8000706:	2600      	movs	r6, #0
 8000708:	42a6      	cmp	r6, r4
 800070a:	d109      	bne.n	8000720 <__libc_init_array+0x24>
 800070c:	4d0b      	ldr	r5, [pc, #44]	@ (800073c <__libc_init_array+0x40>)
 800070e:	4c0c      	ldr	r4, [pc, #48]	@ (8000740 <__libc_init_array+0x44>)
 8000710:	f000 f818 	bl	8000744 <_init>
 8000714:	1b64      	subs	r4, r4, r5
 8000716:	10a4      	asrs	r4, r4, #2
 8000718:	2600      	movs	r6, #0
 800071a:	42a6      	cmp	r6, r4
 800071c:	d105      	bne.n	800072a <__libc_init_array+0x2e>
 800071e:	bd70      	pop	{r4, r5, r6, pc}
 8000720:	f855 3b04 	ldr.w	r3, [r5], #4
 8000724:	4798      	blx	r3
 8000726:	3601      	adds	r6, #1
 8000728:	e7ee      	b.n	8000708 <__libc_init_array+0xc>
 800072a:	f855 3b04 	ldr.w	r3, [r5], #4
 800072e:	4798      	blx	r3
 8000730:	3601      	adds	r6, #1
 8000732:	e7f2      	b.n	800071a <__libc_init_array+0x1e>
 8000734:	0800075c 	.word	0x0800075c
 8000738:	0800075c 	.word	0x0800075c
 800073c:	0800075c 	.word	0x0800075c
 8000740:	08000760 	.word	0x08000760

08000744 <_init>:
 8000744:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000746:	bf00      	nop
 8000748:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800074a:	bc08      	pop	{r3}
 800074c:	469e      	mov	lr, r3
 800074e:	4770      	bx	lr

08000750 <_fini>:
 8000750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000752:	bf00      	nop
 8000754:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000756:	bc08      	pop	{r3}
 8000758:	469e      	mov	lr, r3
 800075a:	4770      	bx	lr
